name: Deploy RSVP Reader

permissions:
  contents: write # Need write permission for version updates
  packages: write
  id-token: write
  actions: read

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for versioning

      - name: Get commit count and set version
        id: get_version
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "VERSION=1.0.${COMMIT_COUNT}" >> $GITHUB_ENV

      - name: Update version files
        run: |
          # Update version.json
          echo "{
            \"version\": \"$VERSION\",
            \"forceRefresh\": true
          }" > web/version.json

          # Update version in main.dart
          sed -i "s/kCurrentVersion = \".*\"/kCurrentVersion = \"$VERSION\"/" lib/main.dart

          # Update version in pubspec.yaml
          sed -i "s/version: .*/version: $VERSION/" pubspec.yaml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/rsvp-reader:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # More aggressive cleanup
            docker stop $(docker ps -a -q) || true  # Stop all containers
            docker rm $(docker ps -a -q) || true    # Remove all containers
            docker rmi $(docker images -a -q) || true  # Remove all images
            docker system prune -af --volumes        # Remove everything including volumes

            # Continue with deployment
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository_owner }}/rsvp-reader:latest
            docker stop rsvp-reader || true
            docker rm rsvp-reader || true
            docker run -d \
              --name rsvp-reader \
              -p 80:3000 \
              --restart always \
              ghcr.io/${{ github.repository_owner }}/rsvp-reader:latest

env:
  FLUTTER_VERSION: "3.19.0"
  DOCKER_BUILDKIT: 1
